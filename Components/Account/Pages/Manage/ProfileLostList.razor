@page "/Account/Manage/LostList"
@using LostAndFoundWeb.Data
@using LostAndFoundWeb.Services
@using Microsoft.EntityFrameworkCore
@inject ApplicationDbContext db
<style>
    .row {
        height: 100px;
    }
</style>
<PageTitle>User Lost List</PageTitle>
@if (LostItems is null)
{
    <p>Loading Lost Items...</p>
}
else
{
    <div class="container">
        @if (LostItems.Count < 1)
        {
            <p>There's no lost items</p>
        }
        else
        {
            <div class="row row-cols-1 row-cols-md-4 g-1">
                @foreach (var item in LostItems)
                {
                    <div class="col">
                        <div class="card" style="width: 16rem;">
                            <img src="@item.Urls[0]" style="height:14rem;" class="card-img-top" alt="...">
                            <div class="card-body">
                                <h5 class="card-title">@item.Name</h5>
                                <p class="card-text">@item.Location </p>
                            </div>
                            <ul class="list-group list-group-flush text-center">
                                <li class="list-group-item">@item.WordOne, @item.WordTwo, @item.WordThree</li>
                            </ul>
                        </div>
                    </div>
                }
            </div>
        }
    </div>
}

@code {
    [CascadingParameter]
    private HttpContext HttpContext{ get; set; }
    private List<LostItem> LostItems { get; set; } = new();
    protected override async Task OnInitializedAsync()
    {
        LostItems = await db.LostItems.AsNoTracking().Where(l => l.LostUser.UserName == HttpContext.User.Identity.Name).ToListAsync(); //TODO: To optmise here
    }
}