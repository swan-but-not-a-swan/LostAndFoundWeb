@using LostAndFoundWeb.Services
﻿@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity
@using LostAndFoundWeb.Components.Account
@using LostAndFoundWeb.Data
@inject UserManager<ApplicationUser> UserManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject StateContainer StateContainer


    <div class="container-fluid">
        
        <a class="navbar-brand" href="#">
        <img src="Images/logo.png" class="rounded-circle" alt="CodeCain Logo" style="width:100px;height:100px;">
        </a>



        <ul class="navbar-nav">
        <li class="nav-item">
            <NavLink href="/lostlist" class="nav-link"><h3>Lost items</h3></NavLink>
        </li>
        <li class="nav-item">
            <NavLink class="nav-link" href="/foundlist"><h3>Found items</h3></NavLink>
        </li>
        <li class="nav-item">
            <NavLink class="nav-link" href="#"><h3>Home</h3></NavLink>
        </li>
        </ul>

        <NavLink class="navbar-nav" href="/Account/Manage">
        @if(String.IsNullOrEmpty(url))
        {
            <img src="Images/placeholder.jpg" alt="Google Profile Picture" class="rounded-circle" style="width:100px;height:100px;" />
        }
        else
        {
            <img src="@url" alt="Google Profile Picture" class="rounded-circle" style="width:100px;height:100px;" />

        }
        </NavLink>
    </div>



@code {
    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;
    private ApplicationUser user = default!;
    private string url = "";
    private string ProfilePictureUrl;
    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        if(user.Identity.IsAuthenticated)
        {
            string userId = UserManager.GetUserId(user);
            url = $"https://landfimages.blob.core.windows.net/profilepictures/{userId}.jpg";
        }        
    }
}
